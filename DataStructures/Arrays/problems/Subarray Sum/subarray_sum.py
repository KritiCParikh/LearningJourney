# -*- coding: utf-8 -*-
"""Subarray_Sum.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XJBRltSdVnAyNILUZiRBNOuOgLirSXTw

Problem: Find if there exists a contiguous subarray that sums to a given value.

Using Prefix Sum - O(n)
"""

def subarray_sum(nums, target):
    prefix_sum = {0: -1}  # Stores sum at each index
    curr_sum = 0

    for i, num in enumerate(nums):
        curr_sum += num
        if curr_sum - target in prefix_sum:
            return [prefix_sum[curr_sum - target] + 1, i]  # Returns indices
        prefix_sum[curr_sum] = i
    return []

print(subarray_sum([1, 2, 3, 7, 5], 10))